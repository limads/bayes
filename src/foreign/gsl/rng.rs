/* automatically generated by rust-bindgen */

pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __FILE = _IO_FILE;
pub type FILE = _IO_FILE;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_marker {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_codecvt {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_wide_data {
    _unused: [u8; 0],
}
pub type _IO_lock_t = ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_FILE {
    pub _flags: ::std::os::raw::c_int,
    pub _IO_read_ptr: *mut ::std::os::raw::c_char,
    pub _IO_read_end: *mut ::std::os::raw::c_char,
    pub _IO_read_base: *mut ::std::os::raw::c_char,
    pub _IO_write_base: *mut ::std::os::raw::c_char,
    pub _IO_write_ptr: *mut ::std::os::raw::c_char,
    pub _IO_write_end: *mut ::std::os::raw::c_char,
    pub _IO_buf_base: *mut ::std::os::raw::c_char,
    pub _IO_buf_end: *mut ::std::os::raw::c_char,
    pub _IO_save_base: *mut ::std::os::raw::c_char,
    pub _IO_backup_base: *mut ::std::os::raw::c_char,
    pub _IO_save_end: *mut ::std::os::raw::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: ::std::os::raw::c_int,
    pub _flags2: ::std::os::raw::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: ::std::os::raw::c_ushort,
    pub _vtable_offset: ::std::os::raw::c_schar,
    pub _shortbuf: [::std::os::raw::c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub _codecvt: *mut _IO_codecvt,
    pub _wide_data: *mut _IO_wide_data,
    pub _freeres_list: *mut _IO_FILE,
    pub _freeres_buf: *mut ::std::os::raw::c_void,
    pub __pad5: usize,
    pub _mode: ::std::os::raw::c_int,
    pub _unused2: [::std::os::raw::c_char; 20usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gsl_rng_type {
    pub name: *const ::std::os::raw::c_char,
    pub max: ::std::os::raw::c_ulong,
    pub min: ::std::os::raw::c_ulong,
    pub size: usize,
    pub set: ::std::option::Option<
        unsafe extern "C" fn(state: *mut ::std::os::raw::c_void,
                             seed: ::std::os::raw::c_ulong),
    >,
    pub get: ::std::option::Option<
        unsafe extern "C" fn(state: *mut ::std::os::raw::c_void)
                             -> ::std::os::raw::c_ulong,
    >,
    pub get_double:
        ::std::option::Option<unsafe extern "C" fn(state: *mut ::std::os::raw::c_void) -> f64>,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gsl_rng {
    pub type_: *const gsl_rng_type,
    pub state: *mut ::std::os::raw::c_void,
}
extern "C" {
    pub static mut gsl_rng_borosh13: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_coveyou: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_cmrg: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_fishman18: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_fishman20: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_fishman2x: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_gfsr4: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_knuthran: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_knuthran2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_knuthran2002: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_lecuyer21: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_minstd: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_mrg: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_mt19937: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_mt19937_1999: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_mt19937_1998: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_r250: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ran0: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ran1: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ran2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ran3: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_rand: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_rand48: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random128_bsd: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random128_glibc2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random128_libc5: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random256_bsd: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random256_glibc2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random256_libc5: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random32_bsd: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random32_glibc2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random32_libc5: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random64_bsd: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random64_glibc2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random64_libc5: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random8_bsd: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random8_glibc2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random8_libc5: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random_bsd: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random_glibc2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_random_libc5: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_randu: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ranf: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ranlux: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ranlux389: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ranlxd1: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ranlxd2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ranlxs0: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ranlxs1: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ranlxs2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_ranmar: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_slatec: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_taus: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_taus2: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_taus113: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_transputer: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_tt800: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_uni: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_uni32: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_vax: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_waterman14: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_zuf: *const gsl_rng_type;
}
extern "C" {
    pub fn gsl_rng_types_setup() -> *mut *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_default: *const gsl_rng_type;
}
extern "C" {
    pub static mut gsl_rng_default_seed: ::std::os::raw::c_ulong;
}
extern "C" {
    pub fn gsl_rng_alloc(T: *const gsl_rng_type) -> *mut gsl_rng;
}
extern "C" {
    pub fn gsl_rng_memcpy(dest: *mut gsl_rng, src: *const gsl_rng) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_rng_clone(r: *const gsl_rng) -> *mut gsl_rng;
}
extern "C" {
    pub fn gsl_rng_free(r: *mut gsl_rng);
}
extern "C" {
    pub fn gsl_rng_set(r: *const gsl_rng, seed: ::std::os::raw::c_ulong);
}
extern "C" {
    pub fn gsl_rng_max(r: *const gsl_rng) -> ::std::os::raw::c_ulong;
}
extern "C" {
    pub fn gsl_rng_min(r: *const gsl_rng) -> ::std::os::raw::c_ulong;
}
extern "C" {
    pub fn gsl_rng_name(r: *const gsl_rng) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn gsl_rng_fread(stream: *mut FILE, r: *mut gsl_rng) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_rng_fwrite(stream: *mut FILE, r: *const gsl_rng) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_rng_size(r: *const gsl_rng) -> usize;
}
extern "C" {
    pub fn gsl_rng_state(r: *const gsl_rng) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn gsl_rng_print_state(r: *const gsl_rng);
}
extern "C" {
    pub fn gsl_rng_env_setup() -> *const gsl_rng_type;
}
extern "C" {
    pub fn gsl_rng_get(r: *const gsl_rng) -> ::std::os::raw::c_ulong;
}
extern "C" {
    pub fn gsl_rng_uniform(r: *const gsl_rng) -> f64;
}
extern "C" {
    pub fn gsl_rng_uniform_pos(r: *const gsl_rng) -> f64;
}
extern "C" {
    pub fn gsl_rng_uniform_int(
        r: *const gsl_rng,
        n: ::std::os::raw::c_ulong,
    ) -> ::std::os::raw::c_ulong;
}
