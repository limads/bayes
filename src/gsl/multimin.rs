use crate::gsl::vector_double::*;
use crate::gsl::matrix_double::*;
use crate::gsl::block_double::*;

/* automatically generated by rust-bindgen */

#[repr(C)]
pub struct gsl_multimin_function_struct {
    pub f: ::std::option::Option<
        unsafe extern "C" fn(x: *const gsl_vector,
                             params: *mut ::std::os::raw::c_void)
                             -> f64,
    >,
    pub n: usize,
    pub params: *mut ::std::os::raw::c_void,
}
pub type gsl_multimin_function = gsl_multimin_function_struct;
#[repr(C)]
pub struct gsl_multimin_function_fdf_struct {
    pub f: ::std::option::Option<
        unsafe extern "C" fn(x: *const gsl_vector,
                             params: *mut ::std::os::raw::c_void)
                             -> f64,
    >,
    pub df: ::std::option::Option<
        unsafe extern "C" fn(x: *const gsl_vector,
                             params: *mut ::std::os::raw::c_void,
                             df: *mut gsl_vector),
    >,
    pub fdf: ::std::option::Option<
        unsafe extern "C" fn(x: *const gsl_vector,
                             params: *mut ::std::os::raw::c_void,
                             f: *mut f64,
                             df: *mut gsl_vector),
    >,
    pub n: usize,
    pub params: *mut ::std::os::raw::c_void,
}
pub type gsl_multimin_function_fdf = gsl_multimin_function_fdf_struct;
extern "C" {
    pub fn gsl_multimin_diff(
        f: *const gsl_multimin_function,
        x: *const gsl_vector,
        g: *mut gsl_vector,
    ) -> ::std::os::raw::c_int;
}
#[repr(C)]
pub struct gsl_multimin_fminimizer_type {
    pub name: *const ::std::os::raw::c_char,
    pub size: usize,
    pub alloc: ::std::option::Option<
        unsafe extern "C" fn(state: *mut ::std::os::raw::c_void,
                             n: usize)
                             -> ::std::os::raw::c_int,
    >,
    pub set: ::std::option::Option<
        unsafe extern "C" fn(state: *mut ::std::os::raw::c_void,
                             f: *mut gsl_multimin_function,
                             x: *const gsl_vector,
                             size: *mut f64,
                             step_size: *const gsl_vector)
                             -> ::std::os::raw::c_int,
    >,
    pub iterate: ::std::option::Option<
        unsafe extern "C" fn(state: *mut ::std::os::raw::c_void,
                             f: *mut gsl_multimin_function,
                             x: *mut gsl_vector,
                             size: *mut f64,
                             fval: *mut f64)
                             -> ::std::os::raw::c_int,
    >,
    pub free: ::std::option::Option<unsafe extern "C" fn(state: *mut ::std::os::raw::c_void)>,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gsl_multimin_fminimizer {
    pub type_: *const gsl_multimin_fminimizer_type,
    pub f: *mut gsl_multimin_function,
    pub fval: f64,
    pub x: *mut gsl_vector,
    pub size: f64,
    pub state: *mut ::std::os::raw::c_void,
}
extern "C" {
    pub fn gsl_multimin_fminimizer_alloc(
        T: *const gsl_multimin_fminimizer_type,
        n: usize,
    ) -> *mut gsl_multimin_fminimizer;
}
extern "C" {
    pub fn gsl_multimin_fminimizer_set(
        s: *mut gsl_multimin_fminimizer,
        f: *mut gsl_multimin_function,
        x: *const gsl_vector,
        step_size: *const gsl_vector,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_multimin_fminimizer_free(s: *mut gsl_multimin_fminimizer);
}
extern "C" {
    pub fn gsl_multimin_fminimizer_name(
        s: *const gsl_multimin_fminimizer,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn gsl_multimin_fminimizer_iterate(
        s: *mut gsl_multimin_fminimizer,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_multimin_fminimizer_x(s: *const gsl_multimin_fminimizer) -> *mut gsl_vector;
}
extern "C" {
    pub fn gsl_multimin_fminimizer_minimum(s: *const gsl_multimin_fminimizer) -> f64;
}
extern "C" {
    pub fn gsl_multimin_fminimizer_size(s: *const gsl_multimin_fminimizer) -> f64;
}
extern "C" {
    pub fn gsl_multimin_test_gradient(g: *const gsl_vector, epsabs: f64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_multimin_test_size(size: f64, epsabs: f64) -> ::std::os::raw::c_int;
}
#[repr(C)]
pub struct gsl_multimin_fdfminimizer_type {
    pub name: *const ::std::os::raw::c_char,
    pub size: usize,
    pub alloc: ::std::option::Option<
        unsafe extern "C" fn(state: *mut ::std::os::raw::c_void,
                             n: usize)
                             -> ::std::os::raw::c_int,
    >,
    pub set: ::std::option::Option<
        unsafe extern "C" fn(state: *mut ::std::os::raw::c_void,
                             fdf: *mut gsl_multimin_function_fdf,
                             x: *const gsl_vector,
                             f: *mut f64,
                             gradient: *mut gsl_vector,
                             step_size: f64,
                             tol: f64)
                             -> ::std::os::raw::c_int,
    >,
    pub iterate: ::std::option::Option<
        unsafe extern "C" fn(state: *mut ::std::os::raw::c_void,
                             fdf: *mut gsl_multimin_function_fdf,
                             x: *mut gsl_vector,
                             f: *mut f64,
                             gradient: *mut gsl_vector,
                             dx: *mut gsl_vector)
                             -> ::std::os::raw::c_int,
    >,
    pub restart: ::std::option::Option<
        unsafe extern "C" fn(state: *mut ::std::os::raw::c_void)
                             -> ::std::os::raw::c_int,
    >,
    pub free: ::std::option::Option<unsafe extern "C" fn(state: *mut ::std::os::raw::c_void)>,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct gsl_multimin_fdfminimizer {
    pub type_: *const gsl_multimin_fdfminimizer_type,
    pub fdf: *mut gsl_multimin_function_fdf,
    pub f: f64,
    pub x: *mut gsl_vector,
    pub gradient: *mut gsl_vector,
    pub dx: *mut gsl_vector,
    pub state: *mut ::std::os::raw::c_void,
}
extern "C" {
    pub fn gsl_multimin_fdfminimizer_alloc(
        T: *const gsl_multimin_fdfminimizer_type,
        n: usize,
    ) -> *mut gsl_multimin_fdfminimizer;
}
extern "C" {
    pub fn gsl_multimin_fdfminimizer_set(
        s: *mut gsl_multimin_fdfminimizer,
        fdf: *mut gsl_multimin_function_fdf,
        x: *const gsl_vector,
        step_size: f64,
        tol: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_multimin_fdfminimizer_free(s: *mut gsl_multimin_fdfminimizer);
}
extern "C" {
    pub fn gsl_multimin_fdfminimizer_name(
        s: *const gsl_multimin_fdfminimizer,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn gsl_multimin_fdfminimizer_iterate(
        s: *mut gsl_multimin_fdfminimizer,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_multimin_fdfminimizer_restart(
        s: *mut gsl_multimin_fdfminimizer,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_multimin_fdfminimizer_x(s: *const gsl_multimin_fdfminimizer) -> *mut gsl_vector;
}
extern "C" {
    pub fn gsl_multimin_fdfminimizer_dx(s: *const gsl_multimin_fdfminimizer) -> *mut gsl_vector;
}
extern "C" {
    pub fn gsl_multimin_fdfminimizer_gradient(
        s: *const gsl_multimin_fdfminimizer,
    ) -> *mut gsl_vector;
}
extern "C" {
    pub fn gsl_multimin_fdfminimizer_minimum(s: *const gsl_multimin_fdfminimizer) -> f64;
}
extern "C" {
}
extern "C" {
    pub static mut gsl_multimin_fdfminimizer_conjugate_pr: *const gsl_multimin_fdfminimizer_type;
}
extern "C" {
    pub static mut gsl_multimin_fdfminimizer_conjugate_fr: *const gsl_multimin_fdfminimizer_type;
}
extern "C" {
    pub static mut gsl_multimin_fdfminimizer_vector_bfgs: *const gsl_multimin_fdfminimizer_type;
}
extern "C" {
    pub static mut gsl_multimin_fdfminimizer_vector_bfgs2: *const gsl_multimin_fdfminimizer_type;
}
extern "C" {
    pub static mut gsl_multimin_fminimizer_nmsimplex: *const gsl_multimin_fminimizer_type;
}
extern "C" {
    pub static mut gsl_multimin_fminimizer_nmsimplex2: *const gsl_multimin_fminimizer_type;
}
extern "C" {
    pub static mut gsl_multimin_fminimizer_nmsimplex2rand: *const gsl_multimin_fminimizer_type;
}
