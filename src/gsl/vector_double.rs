use crate::gsl::block_double::*;

/* automatically generated by rust-bindgen */

extern "C" {
    pub fn gsl_error(
        reason: *const ::std::os::raw::c_char,
        file: *const ::std::os::raw::c_char,
        line: ::std::os::raw::c_int,
        gsl_errno: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn gsl_stream_printf(
        label: *const ::std::os::raw::c_char,
        file: *const ::std::os::raw::c_char,
        line: ::std::os::raw::c_int,
        reason: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn gsl_strerror(gsl_errno: ::std::os::raw::c_int) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn gsl_set_error_handler(new_handler: gsl_error_handler_t) -> gsl_error_handler_t;
}
extern "C" {
    pub fn gsl_set_error_handler_off() -> gsl_error_handler_t;
}
extern "C" {
    pub fn gsl_set_stream_handler(new_handler: gsl_stream_handler_t) -> gsl_stream_handler_t;
}
extern "C" {
    pub fn gsl_set_stream(new_stream: *mut FILE) -> *mut FILE;
}
extern "C" {
    pub fn gsl_block_alloc(n: usize) -> *mut gsl_block;
}
extern "C" {
    pub fn gsl_block_calloc(n: usize) -> *mut gsl_block;
}
extern "C" {
    pub fn gsl_block_free(b: *mut gsl_block);
}
extern "C" {
    pub fn gsl_block_fread(stream: *mut FILE, b: *mut gsl_block) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_block_fwrite(stream: *mut FILE, b: *const gsl_block) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_block_fscanf(stream: *mut FILE, b: *mut gsl_block) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_block_fprintf(
        stream: *mut FILE,
        b: *const gsl_block,
        format: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_block_raw_fread(
        stream: *mut FILE,
        b: *mut f64,
        n: usize,
        stride: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_block_raw_fwrite(
        stream: *mut FILE,
        b: *const f64,
        n: usize,
        stride: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_block_raw_fscanf(
        stream: *mut FILE,
        b: *mut f64,
        n: usize,
        stride: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_block_raw_fprintf(
        stream: *mut FILE,
        b: *const f64,
        n: usize,
        stride: usize,
        format: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_block_size(b: *const gsl_block) -> usize;
}
extern "C" {
    pub fn gsl_block_data(b: *const gsl_block) -> *mut f64;
}
#[repr(C)]
#[derive(Clone)]
pub struct gsl_vector {
    pub size: usize,
    pub stride: usize,
    pub data: *mut f64,
    pub block: *mut gsl_block,
    pub owner: ::std::os::raw::c_int,
}
#[repr(C)]
pub struct _gsl_vector_view {
    pub vector: gsl_vector,
}
pub type gsl_vector_view = _gsl_vector_view;
#[repr(C)]
pub struct _gsl_vector_const_view {
    pub vector: gsl_vector,
}
pub type gsl_vector_const_view = _gsl_vector_const_view;
extern "C" {
    pub fn gsl_vector_alloc(n: usize) -> *mut gsl_vector;
}
extern "C" {
    pub fn gsl_vector_calloc(n: usize) -> *mut gsl_vector;
}
extern "C" {
    pub fn gsl_vector_alloc_from_block(
        b: *mut gsl_block,
        offset: usize,
        n: usize,
        stride: usize,
    ) -> *mut gsl_vector;
}
extern "C" {
    pub fn gsl_vector_alloc_from_vector(
        v: *mut gsl_vector,
        offset: usize,
        n: usize,
        stride: usize,
    ) -> *mut gsl_vector;
}
extern "C" {
    pub fn gsl_vector_free(v: *mut gsl_vector);
}
extern "C" {
    pub fn gsl_vector_view_array(v: *mut f64, n: usize) -> _gsl_vector_view;
}
extern "C" {
    pub fn gsl_vector_view_array_with_stride(
        base: *mut f64,
        stride: usize,
        n: usize,
    ) -> _gsl_vector_view;
}
extern "C" {
    pub fn gsl_vector_const_view_array(v: *const f64, n: usize) -> _gsl_vector_const_view;
}
extern "C" {
    pub fn gsl_vector_const_view_array_with_stride(
        base: *const f64,
        stride: usize,
        n: usize,
    ) -> _gsl_vector_const_view;
}
extern "C" {
    pub fn gsl_vector_subvector(v: *mut gsl_vector, i: usize, n: usize) -> _gsl_vector_view;
}
extern "C" {
    pub fn gsl_vector_subvector_with_stride(
        v: *mut gsl_vector,
        i: usize,
        stride: usize,
        n: usize,
    ) -> _gsl_vector_view;
}
extern "C" {
    pub fn gsl_vector_const_subvector(
        v: *const gsl_vector,
        i: usize,
        n: usize,
    ) -> _gsl_vector_const_view;
}
extern "C" {
    pub fn gsl_vector_const_subvector_with_stride(
        v: *const gsl_vector,
        i: usize,
        stride: usize,
        n: usize,
    ) -> _gsl_vector_const_view;
}
extern "C" {
    pub fn gsl_vector_set_zero(v: *mut gsl_vector);
}
extern "C" {
    pub fn gsl_vector_set_all(v: *mut gsl_vector, x: f64);
}
extern "C" {
    pub fn gsl_vector_set_basis(v: *mut gsl_vector, i: usize) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_fread(stream: *mut FILE, v: *mut gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_fwrite(stream: *mut FILE, v: *const gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_fscanf(stream: *mut FILE, v: *mut gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_fprintf(
        stream: *mut FILE,
        v: *const gsl_vector,
        format: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_memcpy(
        dest: *mut gsl_vector,
        src: *const gsl_vector,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_reverse(v: *mut gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_swap(v: *mut gsl_vector, w: *mut gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_swap_elements(
        v: *mut gsl_vector,
        i: usize,
        j: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_max(v: *const gsl_vector) -> f64;
}
extern "C" {
    pub fn gsl_vector_min(v: *const gsl_vector) -> f64;
}
extern "C" {
    pub fn gsl_vector_minmax(v: *const gsl_vector, min_out: *mut f64, max_out: *mut f64);
}
extern "C" {
    pub fn gsl_vector_max_index(v: *const gsl_vector) -> usize;
}
extern "C" {
    pub fn gsl_vector_min_index(v: *const gsl_vector) -> usize;
}
extern "C" {
    pub fn gsl_vector_minmax_index(v: *const gsl_vector, imin: *mut usize, imax: *mut usize);
}
extern "C" {
    pub fn gsl_vector_add(a: *mut gsl_vector, b: *const gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_sub(a: *mut gsl_vector, b: *const gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_mul(a: *mut gsl_vector, b: *const gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_div(a: *mut gsl_vector, b: *const gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_scale(a: *mut gsl_vector, x: f64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_add_constant(a: *mut gsl_vector, x: f64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_equal(u: *const gsl_vector, v: *const gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_isnull(v: *const gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_ispos(v: *const gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_isneg(v: *const gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_isnonneg(v: *const gsl_vector) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn gsl_vector_get(v: *const gsl_vector, i: usize) -> f64;
}
extern "C" {
    pub fn gsl_vector_set(v: *mut gsl_vector, i: usize, x: f64);
}
extern "C" {
    pub fn gsl_vector_ptr(v: *mut gsl_vector, i: usize) -> *mut f64;
}
extern "C" {
    pub fn gsl_vector_const_ptr(v: *const gsl_vector, i: usize) -> *const f64;
}
